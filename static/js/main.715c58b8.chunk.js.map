{"version":3,"sources":["Navbar.js","Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","placeholder","Textarea","useState","text","settext","class","for","value","onChange","event","target","rows","onClick","console","log","newTxt","toUpperCase","toLowerCase","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","getElementById","select","setSelectionRange","navigator","clipboard","writeText","alert","Text","split","reverseText","reverse","toString","replaceAll","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.715c58b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About Us</a>\r\n        </li>\r\n        \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React , {useState }from 'react'\r\n\r\nconst Textarea = () => {\r\n    \r\n    const toUpperCase=()=>{\r\n        console.log(\"button clicked\")\r\n        let newTxt=text.toUpperCase()\r\n        settext(newTxt)\r\n\r\n    }\r\n    const toLowerCase=()=>{\r\n        console.log(\"button clicked\")\r\n        let newTxt=text.toLowerCase()\r\n        settext(newTxt)\r\n\r\n    }\r\n    const toClear=()=>{\r\n        console.log(\"button clicked\")\r\n        let newTxt=\"\"\r\n        settext(newTxt)\r\n\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        settext(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        alert(\"your text is copied\")\r\n\r\n\r\n    }\r\n    const handleReverseText = () => {\r\n        alert(\"Warning your data can be revesed .But don't worry because you can again reverse it to get the correct data.Thank you for using this function.\");\r\n        Text = text.split(\"\");\r\n        let reverseText = Text.reverse().toString().replaceAll(\",\", \"\");\r\n\r\n\r\n        console.log(Text.reverse().toString().replaceAll(\",\", \"\"));\r\n        settext(reverseText)\r\n    }\r\n    const download=(filename, text)=>{\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n        element.style.display = 'none'; document.body.appendChild(element);\r\n        element.click(); document.body.removeChild(element);\r\n      }\r\n    const [text, settext] = useState(\"\");\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <div class=\"mb-3\">\r\n                <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Example textarea</label>\r\n                <textarea class=\"form-control\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n            </div>\r\n            <div className=\"container \">\r\n                <button className=\"btn btn-primary mx-2\" onClick={toUpperCase}>convert to uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={toLowerCase}>convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={toClear}>clear</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={download}>download text file</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>copy to clip board</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleReverseText}>reverse text</button>\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2>    Summary         </h2>\r\n                <p>{text.length} characters {text.length===0?0:text.split(\" \").length} words</p>\r\n                <p>on an average it takes {text.length===0?0:text.split(\" \").length*1.5} seconds to read</p>   \r\n           </div>\r\n            <div className=\"container my-3\">\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textarea\r\n","import React from 'react'\nimport Navbar from './Navbar'\nimport Textarea from './Textarea'\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar title=\"Textcontrol\"/>\n      <Textarea/>\n      \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}